name: release
# Release action which will fire when a new release is published.
# The code will be built uploaded to the release.

on:
  release:
    types: [published]

env:
  BUILD_NUMBER: ${{ github.event.release.tag_name }}.${{ github.run_number }}
  DOTNET_VERSION: 3.1.x
  SOLUTION_PATH: ./src/GuardAgainstLib.sln
  PROJECT_PATH: ./src/GuardAgainstLib/GuardAgainstLib.csproj
  CONFIGURATION: Release
  ARITFACT_PATH: ./dist

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: dump githib context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v2
      - name: setup dotnet core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: clean
        run: dotnet clean
          --configuration ${{ env.CONFIGURATION }}
          --nologo
          ${{ env.SOLUTION_PATH }}

      - name: build
        run: dotnet build
          --configuration ${{ env.CONFIGURATION }}
          --no-incremental
          --nologo
          /p:BuildNumber=${{ env.BUILD_NUMBER }}
          /p:Version=${{ env.BUILD_NUMBER }}
          /p:WarningLevel=4
          /p:TreatWarningsAsErrors=true
          /p:NoWarn=""
          /p:WarningsAsErrors=""
          ${{ env.SOLUTION_PATH }}

      - name: test
        run: dotnet test
          --configuration ${{ env.CONFIGURATION }}
          --no-restore
          --no-build
          --nologo
          ${{ env.PROJECT_PATH }}

      - name: publish
        run: dotnet publish
          --configuration ${{ env.CONFIGURATION }}
          --no-restore
          --no-build
          --nologo
          /p:BuildNumber=${{ env.BUILD_NUMBER }}
          /p:Version=${{ env.BUILD_NUMBER }}
          --output ${{ env.ARITFACT_PATH }}
          ${{ env.PROJECT_PATH }}

      - name: pack
        run: dotnet pack
          --configuration ${{ env.CONFIGURATION }}
          --no-build
          --no-restore
          --nologo
          /p:Version=${{ env.BUILD_NUMBER }}
          /p:PackageVersion=${{ env.BUILD_NUMBER }}
          --output ${{ env.ARITFACT_PATH }}
          ${{ env.PROJECT_PATH }}

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: ${{ env.ARITFACT_PATH }}/GuardAgainst*

      - name: push to nuget
        run: dotnet nuget
          push ${{ env.ARITFACT_PATH }}/GuardAgainst.${{ env.BUILD_NUMBER }}.nupkg
          --api-key ${{ secrets.NUGET_KEY }}
          --source https://api.nuget.org/v3/index.json

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.ARITFACT_PATH }}/GuardAgainstLib.dll
          asset_name: GuardAgainstLib.dll
          asset_content_type: application/octet-stream
