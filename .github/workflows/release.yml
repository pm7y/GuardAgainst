name: release
# Release action which will fire when a new release is published.
# The code will be built uploaded to the release.

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Release tag name e.g. '1.0.1'"
        required: true

env:
  VERSION_NUMBER: ${{ github.event.inputs.tag_name }}
  BUILD_NUMBER: ${{ github.event.inputs.tag_name }}.${{ github.run_number }}
  DOTNET_VERSION: 5.0.x
  SOLUTION_PATH: ./src/GuardAgainstLib.sln
  PROJECT_PATH: ./src/GuardAgainstLib/GuardAgainstLib.csproj
  CONFIGURATION: Release
  ARITFACT_PATH: ./dist

jobs:
  test-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    steps:
      - name: log github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: setup dotnet core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: get the code
        uses: actions/checkout@v2

      - name: clean
        run: dotnet clean
          --configuration ${{ env.CONFIGURATION }}
          --nologo
          ${{ env.SOLUTION_PATH }}

      - name: restore
        run: dotnet restore
          --runtime ${{ matrix.runtime }}
          --nologo
          ${{ env.SOLUTION_PATH }}

      - name: build
        run: dotnet build
          --configuration ${{ env.CONFIGURATION }}
          --runtime ${{ matrix.runtime }}
          --no-incremental
          --nologo
          /p:WarningLevel=4
          /p:TreatWarningsAsErrors=true
          /p:NoWarn=""
          /p:WarningsAsErrors=""
          ${{ env.SOLUTION_PATH }}

      - name: test
        run: dotnet test
          --configuration ${{ env.CONFIGURATION }}
          --runtime ${{ matrix.runtime }}
          --no-restore
          --no-build
          --nologo
          ${{ env.SOLUTION_PATH }}

      - name: publish
        run: dotnet publish
          --configuration ${{ env.CONFIGURATION }}
          --nologo
          --self-contained true
          /p:BuildNumber=${{ env.BUILD_NUMBER }}
          /p:Version=${{ env.BUILD_NUMBER }}
          /p:PublishReadyToRun=false
          /p:IncludeNativeLibrariesForSelfExtract=true
          /p:PublishSingleFile=true
          /p:PublishTrimmed=true
          /p:TrimUnusedDependencies=true
          --output ${{ env.ARITFACT_PATH }}
          ${{ env.PROJECT_PATH }}

      - name: pack
        run: dotnet pack
          --configuration ${{ env.CONFIGURATION }}
          --no-build
          --no-restore
          --nologo
          /p:Version=${{ env.BUILD_NUMBER }}
          /p:PackageVersion=${{ env.BUILD_NUMBER }}
          --output ${{ env.ARITFACT_PATH }}
          ${{ env.PROJECT_PATH }}

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: ${{ env.ARITFACT_PATH }}/GuardAgainst*

      - name: push to nuget
        run: dotnet nuget
          push ${{ env.ARITFACT_PATH }}/GuardAgainst.${{ env.BUILD_NUMBER }}.nupkg
          --api-key ${{ secrets.NUGET_KEY }}
          --source https://api.nuget.org/v3/index.json

      - name: release artifacts
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.VERSION_NUMBER }}
          tag_name: ${{ env.VERSION_NUMBER }}
          files: GuardAgainstLib.dll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
